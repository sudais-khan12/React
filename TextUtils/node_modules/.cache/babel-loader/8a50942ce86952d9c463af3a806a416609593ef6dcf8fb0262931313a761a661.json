{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\TextUtils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\n// import { createRoot } from \"react-dom/client\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const changeMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  };\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Transform Your Text\",\n        mode: mode,\n        alert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: \"about\",\n    element: /*#__PURE__*/_jsxDEV(About, {\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      home: \"Home\",\n      about: \"About\",\n      mode: mode,\n      changeMode: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-flex justify-content-end position-absolute top-0 end-0\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), \"createRoot(document.getElementById(\\\"root\\\")).render(\", /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Alert","Navbar","TextForm","About","createBrowserRouter","RouterProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","changeMode","document","body","style","backgroundColor","router","path","element","className","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","title","home","about","class","_c","$RefreshReg$"],"sources":["D:/React/TextUtils/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\n// import { createRoot } from \"react-dom/client\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const changeMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  };\n\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: (\n        <div className=\"container my-5\">\n          <TextForm\n            heading=\"Transform Your Text\"\n            mode={mode}\n            alert={showAlert}\n          />\n        </div>\n      ),\n    },\n    {\n      path: \"about\",\n      element: <About mode={mode} />,\n    },\n  ]);\n\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        home=\"Home\"\n        about=\"About\"\n        mode={mode}\n        changeMode={changeMode}\n      />\n      <div class=\"d-flex justify-content-end position-absolute top-0 end-0\">\n        <Alert alert={alert} />\n      </div>\n      createRoot(document.getElementById(\"root\")).render(\n      <RouterProvider router={router} />\n      );\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
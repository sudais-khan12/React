{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\TextUtils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  // States .......\n  const [text, setText] = useState(\"Enter\");\n  let upperCase = () => {\n    setText(\"All is well\");\n  };\n  let handleOnChange = event => {\n    console.log(text.value);\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        placeholder: \".....\",\n        value: text,\n        id: \"text\",\n        rows: \"8\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-primary\",\n      onClick: upperCase,\n      children: \"Convert to UpperCase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"bOkkgnFJ0doSf5DXP496VovTU3o=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","upperCase","handleOnChange","event","console","log","value","target","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","id","rows","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/React/TextUtils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  // States .......\r\n  const [text, setText] = useState(\"Enter\");\r\n  let upperCase = () => {\r\n    setText(\"All is well\");\r\n  };\r\n\r\n  let handleOnChange = (event) => {\r\n    console.log(text.value);\r\n    setText(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          placeholder=\".....\"\r\n          value={text}\r\n          id=\"text\"\r\n          rows=\"8\"\r\n          onChange={handleOnChange}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"btn btn-primary\" onClick={upperCase}>\r\n        Convert to UpperCase\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACzC,IAAIU,SAAS,GAAGA,CAAA,KAAM;IACpBD,OAAO,CAAC,aAAa,CAAC;EACxB,CAAC;EAED,IAAIE,cAAc,GAAIC,KAAK,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAACN,IAAI,CAACO,KAAK,CAAC;IACvBN,OAAO,CAACG,KAAK,CAACI,MAAM,CAACD,KAAK,CAAC;EAC7B,CAAC;EACD,oBACEb,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAKX,KAAK,CAACY;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBpB,OAAA;MAAKqB,SAAS,EAAC,MAAM;MAAAN,QAAA,eACnBf,OAAA;QACEqB,SAAS,EAAC,cAAc;QACxBC,WAAW,EAAC,OAAO;QACnBT,KAAK,EAAEP,IAAK;QACZiB,EAAE,EAAC,MAAM;QACTC,IAAI,EAAC,GAAG;QACRC,QAAQ,EAAEhB;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNpB,OAAA;MAAKqB,SAAS,EAAC,iBAAiB;MAACK,OAAO,EAAElB,SAAU;MAAAO,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACN,CAAC;AAEP;AAACf,EAAA,CA7BuBF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}